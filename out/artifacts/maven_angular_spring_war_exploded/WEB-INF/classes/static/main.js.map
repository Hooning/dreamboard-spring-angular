{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board-list/board-edit/board-edit.component.html","webpack:///./src/app/board/board-list/board-edit/board-edit.component.ts","webpack:///./src/app/board/board-list/board-list.component.css","webpack:///./src/app/board/board-list/board-list.component.html","webpack:///./src/app/board/board-list/board-list.component.ts","webpack:///./src/app/board/board-list/board.model.ts","webpack:///./src/app/board/board.service.ts","webpack:///./src/app/dreams/dream-detail/dream-detail.component.css","webpack:///./src/app/dreams/dream-detail/dream-detail.component.html","webpack:///./src/app/dreams/dream-detail/dream-detail.component.ts","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.css","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.html","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.ts","webpack:///./src/app/dreams/dream-list/dream-list.component.css","webpack:///./src/app/dreams/dream-list/dream-list.component.html","webpack:///./src/app/dreams/dream-list/dream-list.component.ts","webpack:///./src/app/dreams/dream-resolver.service.ts","webpack:///./src/app/dreams/dream.model.ts","webpack:///./src/app/dreams/dream.service.ts","webpack:///./src/app/dreams/dreams.component.css","webpack:///./src/app/dreams/dreams.component.html","webpack:///./src/app/dreams/dreams.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/shared/dropdown.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { BoardListComponent } from \"./board/board-list/board-list.component\";\nimport { DreamsComponent } from \"./dreams/dreams.component\";\n\nimport { HomeComponent } from \"./home/home.component\";\nimport { DreamResolver } from \"./dreams/dream-resolver.service\";\n\nconst appRoutes: Routes = [\n  // {path: '', redirectTo: 'boards', pathMatch: 'full'},\n  { path: '', component: HomeComponent },\n  { path: 'boards', component: BoardListComponent },\n  { path: 'boards/:boardId/dreams',\n    component: DreamsComponent,\n    resolve: { dreams: DreamResolver } }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <!--<app-board-list-->\\n        <!--*ngIf=\\\"displayBoard\\\" >-->\\n      <!--</app-board-list>-->\\n      <!--<app-dreams-->\\n        <!--*ngIf=\\\"displayDream\\\" >-->\\n      <!--</app-dreams>-->\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\nexport class AppComponent {\n  // displayBoard: boolean = false;\n  // displayDream: boolean = false;\n\n  constructor() {\n\n  }\n\n  // onNavigate(menu: string) {\n  //   console.log(\"[\" + menu + \"] Menu clicked!\");\n  //   if (menu === 'board') {\n  //     this.displayBoard = true;\n  //     this.displayDream = false;\n  //   }else{\n  //     this.displayDream = true;\n  //     this.displayBoard = false;\n  //   }\n  // }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { HeaderComponent } from './header/header.component';\nimport { BoardListComponent } from './board/board-list/board-list.component';\nimport { BoardEditComponent } from \"./board/board-list/board-edit/board-edit.component\";\nimport { DreamListComponent } from './dreams/dream-list/dream-list.component';\nimport { DreamItemComponent } from './dreams/dream-list/dream-item/dream-item.component';\nimport { DreamDetailComponent } from './dreams/dream-detail/dream-detail.component';\nimport { DreamsComponent } from './dreams/dreams.component';\nimport { DropdownDirective } from \"./shared/dropdown.directive\";\nimport { BoardService } from \"./board/board.service\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DreamResolver } from \"./dreams/dream-resolver.service\";\nimport { DreamService } from \"./dreams/dream.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BoardListComponent,\n    BoardEditComponent,\n    DreamListComponent,\n    DreamItemComponent,\n    DreamDetailComponent,\n    DreamsComponent,\n    DropdownDirective,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [BoardService, DreamService, DreamResolver],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            #nameInput\\n            >\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"category\\\">Category</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"category\\\"\\n            class=\\\"form-control\\\"\\n            #categoryInput\\n            >\\n        </div>\\n        <div class=\\\"col-sm-7 form-group\\\">\\n          <label for=\\\"description\\\">Description</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"description\\\"\\n            class=\\\"form-control\\\"\\n            #descriptionInput\\n            >\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"btn-toolbar\\\">\\n            <button\\n              class=\\\"btn btn-success\\\"\\n              type=\\\"submit\\\"\\n              (click)=\\\"onAddBoard()\\\"\\n              >\\n              Add\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\">Delete</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\">Clear</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, ElementRef, EventEmitter, Output, ViewChild} from \"@angular/core\";\nimport {Board} from \"../board.model\";\nimport {BoardService} from \"../../board.service\";\n\n@Component({\n  selector: 'app-board-edit',\n  templateUrl: './board-edit.component.html',\n  styleUrls: []\n})\n\nexport class BoardEditComponent{\n  @ViewChild('nameInput') nameInputRef: ElementRef;\n  @ViewChild('categoryInput') categoryInputRef: ElementRef;\n  @ViewChild('descriptionInput') descriptionInputRef: ElementRef;\n\n\n  constructor(private boardService: BoardService) {\n\n  }\n\n  onAddBoard() {\n    // console.log('onAddBoard() called!');\n    // this.board = new Board(\n    //   this.nameInputRef.nativeElement.value,\n    //   this.categoryInputRef.nativeElement.value,\n    //   this.descriptionInputRef.nativeElement.value\n    //   )\n    const brdId = this.boardService.getNextBoardId();\n    const brdName = this.nameInputRef.nativeElement.value;\n    const brdCategory = this.categoryInputRef.nativeElement.value;\n    const brdDesc = this.descriptionInputRef.nativeElement.value;\n    const newBoard = new Board(brdId, brdName, brdCategory, brdDesc);\n\n    this.boardService.addBoard(newBoard);\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-10\\\">\\n    <app-board-edit></app-board-edit>\\n    <hr>\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">Id</th>\\n          <th scope=\\\"col\\\">Board Name</th>\\n          <th scope=\\\"col\\\">Category</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Delete</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr style=\\\"cursor: pointer\\\"\\n            *ngFor=\\\"let board of boards\\\"\\n            [routerLink]=\\\"['/boards', board.boardId, 'dreams']\\\"\\n            >\\n          <td scope=\\\"row\\\">{{ board.boardId }}</td>\\n          <td scope=\\\"row\\\">{{ board.name }}</td>\\n          <td scope=\\\"row\\\">{{ board.category }}</td>\\n          <td scope=\\\"row\\\">{{ board.description }}</td>\\n          <td scope=\\\"row>\\\"><button class=\\\"btn-xs btn-danger\\\" (click)=\\\"onBoardDelete(board.boardId)\\\">Delete</button></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Board } from './board.model';\nimport { Router } from \"@angular/router\";\n\nimport { BoardService } from \"../board.service\";\n\n@Component({\n  selector: 'app-board-list',\n  templateUrl: './board-list.component.html',\n  styleUrls: ['./board-list.component.css']\n})\nexport class BoardListComponent implements OnInit {\n\n  boards: Board[] = [];\n\n  constructor(private boardService: BoardService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.boards = this.boardService.getBoards();\n\n    this.boardService.boardChanged.subscribe(\n      (boards: Board[]) => {\n        this.boards = boards;\n      }\n    );\n  }\n\n  onBoardDelete(boardId: number) {\n    console.log(\"onBoardDelete() : \" + boardId );\n  }\n\n}\n","export class Board {\n  public boardId: number;\n  public name: string;\n  public category: string;\n  public description: string;\n\n  constructor(id: number, name: string, category: string, description: string){\n    this.boardId = id;\n    this.name = name;\n    this.category = category;\n    this.description = description;\n  }\n}\n","import { EventEmitter, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { Board } from \"./board-list/board.model\";\n\n@Injectable()\nexport class BoardService {\n  boardChanged = new EventEmitter<Board[]>()\n\n  private boards: Board[] = [\n    new Board(1,\"Hoon's Refresh board\", 'Life', 'Dreams for enjoying my life'),\n    new Board(2, \"Hoon's Career board\", 'IT', 'Dreams for being better Programmer')\n  ];\n\n  constructor(private router: Router) {}\n\n  getBoards() {\n    return this.boards.slice();\n  }\n\n  // get Max boardId + 1\n  getNextBoardId = () => {\n    const boards = this.boards.slice();\n\n    return boards\n      .reduce((max, b) => b.boardId > max ? b.boardId : max, boards[0].boardId) + 1;\n  }\n\n  addBoard(board: Board) {\n    this.boards.push(board);\n    this.boardChanged.emit(this.boards.slice());\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img\\n      [src]=\\\"dream.imagePath\\\"\\n      alt=\\\"{{ dream.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 200px\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ dream.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div\\n      appDropdown\\n      class=\\\"btn-group\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary dropdown-toggle\\\">\\n        Manage Dream <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a href=\\\"#\\\">Edit Dream</a></li>\\n        <li><a href=\\\"#\\\">Delete Dream</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{ dream.description }}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    Planed date: 2020-10-10\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    Estimated cost: € 10000\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Dream} from \"../dream.model\";\n\n@Component({\n  selector: 'app-dream-detail',\n  templateUrl: './dream-detail.component.html',\n  styleUrls: ['./dream-detail.component.css']\n})\nexport class DreamDetailComponent implements OnInit {\n  @Input() dream: Dream;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a href=\\\"#\\\"\\n   class=\\\"list-group-item clearfix\\\"\\n   (click)=\\\"onSelected()\\\"\\n>\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ dreamInfo.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{ dreamInfo.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img\\n      [src]=\\\"dreamInfo.imagePath\\\"\\n      alt=\\\"{{ dreamInfo.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 50px;\\\">\\n  </span>\\n</a>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { DreamService } from \"../../dream.service\";\n\n@Component({\n  selector: 'app-dream-item',\n  templateUrl: './dream-item.component.html',\n  styleUrls: ['./dream-item.component.css']\n})\nexport class DreamItemComponent implements OnInit {\n  @Input() dreamInfo;\n\n  constructor(private dreamService: DreamService) {\n\n  }\n\n  ngOnInit() {\n    \n  }\n\n  onSelected() {\n    this.dreamService.dreamSelected.emit(this.dreamInfo);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\">New Dream</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-dream-item\\n      *ngFor=\\\"let dream of dreams\\\"\\n      [dreamInfo]=\\\"dream\\\">\\n    </app-dream-item>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Dream } from \"../dream.model\";\nimport { DreamService } from \"../dream.service\";\nimport { ActivatedRoute, Data } from \"@angular/router\";\n\n@Component({\n  selector: 'app-dream-list',\n  templateUrl: './dream-list.component.html',\n  styleUrls: ['./dream-list.component.css']\n})\nexport class DreamListComponent implements OnInit {\n  dreams: Dream[];\n\n  constructor(private dreamService: DreamService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data\n      .subscribe(\n        (data: Data) => {\n          this.dreams = data['dreams'];\n        }\n      );\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\n\nimport { Observable } from \"rxjs\";\nimport { DreamService } from \"./dream.service\";\n\ninterface Dream {\n  dreamId: number;\n  boardId: number;\n  name: string;\n  description: string;\n  imagePath: string;\n}\n\n@Injectable()\nexport class DreamResolver implements Resolve<Dream[]>{\n  constructor(private dreamService: DreamService) {}\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable <Dream[]> | Promise <Dream[]> | Dream[] {\n    return this.dreamService.getDreams(+route.params['boardId']);\n  }\n\n}\n","export class Dream {\n  public dreamId: number;\n  public boardId: number;\n  public name: string;\n  public description: string;\n  public imagePath: string;\n\n  constructor(dreamId:number, boardId:number, name: string, desc: string, imagePath: string){\n    this.dreamId = dreamId;\n    this.boardId = boardId;\n    this.name = name;\n    this.description = desc;\n    this.imagePath = imagePath;\n  }\n}\n","import { Dream } from \"./dream.model\";\nimport { EventEmitter } from \"@angular/core\";\n\nexport class DreamService {\n  dreamSelected = new EventEmitter<Dream>();\n  selectedDreams: Dream[];\n\n  private dreams: Dream[] = [\n    //Dummy data\n    new Dream(1,1,'Family Europe Travel', 'We will go more than 5 countries..', 'https://www.eturbonews.com/wp-content/uploads/2017/05/EUROPEtravel-696x492.jpg'),\n    new Dream(1,2,'Register Mobile App (iOS or Android)', 'Should learn Swift or Android..', 'https://dbcms.s3.amazonaws.com/devbridgecom/bcms/image/22d10840edda459883362150cf097441/team-app.jpg'),\n    new Dream(2,1,'Hobby for MTB', 'First I need to buy mountain bike..', 'https://static.f-mts.com/u0421/pics/great-mountain-bike-trails-in-val-venosta-413-1200x485-c-x50-y50.jpg')\n  ];\n\n  // getDreams() {\n  //   // Made a copy for using it from outside\n  //   return this.dreams.slice();\n  // }\n\n  getDreams(boardId: number) {\n    const selectedDreams = this.dreams.slice().filter(\n      (d) => {\n        return d.boardId === boardId\n      }\n    );\n\n    console.log(selectedDreams);\n\n    return selectedDreams;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-dream-list></app-dream-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <app-dream-detail\\n      *ngIf=\\\"selectedDream; else infoText\\\"\\n      [dream]=\\\"selectedDream\\\"></app-dream-detail>\\n    <ng-template #infoText>\\n      <p>Please select a Dream!</p>\\n    </ng-template>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Dream } from \"./dream.model\";\nimport { DreamService } from \"./dream.service\";\n\n@Component({\n  selector: 'app-dreams',\n  templateUrl: './dreams.component.html',\n  styleUrls: ['./dreams.component.css']\n})\nexport class DreamsComponent implements OnInit {\n  selectedDream: Dream;\n\n  constructor(private dreamService: DreamService) { }\n\n  ngOnInit() {\n    this.dreamService.dreamSelected.subscribe(\n      (dream: Dream) => {\n        this.selectedDream = dream;\n      }\n    );\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">My Dream Boards</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n          <a routerLink=\\\"/\\\">Home</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n          <a routerLink=\\\"/boards\\\">Boards</a>\\n        </li>\\n        <!--<li routerLinkActive=\\\"active\\\">-->\\n          <!--<a routerLink=\\\"/boards/1/dreams\\\">Dreams</a>-->\\n        <!--</li>-->\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li\\n          class=\\\"dropdown\\\"\\n          appDropdown>\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" role=\\\"button\\\">Manage <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">Save Data</a></li>\\n            <li><a href=\\\"#\\\">Fetch Data</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Welcome to Dream board Home</h1>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Directive, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2} from '@angular/core'\n\n@Directive({\n  selector: '[appDropdown]'\n})\n\n\nexport class DropdownDirective implements OnInit{\n  //@Input() openState: boolean = false;\n  //@Input() _elementClass: String[] = [];\n\n  @HostBinding('class.open') isOpen = false;\n  // get elementClass(): string {\n  //   return this._elementClass.join(' ');\n  // }\n\n  // constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n  //\n  // }\n\n  constructor(){}\n\n  ngOnInit() {\n\n  }\n\n  @HostListener('click') toggleOpen(){\n    this.isOpen = !this.isOpen;\n\n    // [Difficult way]\n    // if ( !this.openState ){\n    //   this._elementClass.push('open');\n    //   this.elementRef.nativeElement.class = this._elementClass;\n    //   this.openState = true;\n    // }else{\n    //   this._elementClass.pop();\n    //   this.elementRef.nativeElement.class = this._elementClass;\n    //   this.openState = false;\n    // }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}