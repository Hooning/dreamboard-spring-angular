{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board-list/board-edit/board-edit.component.html","webpack:///./src/app/board/board-list/board-edit/board-edit.component.ts","webpack:///./src/app/board/board-list/board-list.component.css","webpack:///./src/app/board/board-list/board-list.component.html","webpack:///./src/app/board/board-list/board-list.component.ts","webpack:///./src/app/board/board-list/board.model.ts","webpack:///./src/app/board/board.service.ts","webpack:///./src/app/dreams/dream-detail/dream-detail.component.css","webpack:///./src/app/dreams/dream-detail/dream-detail.component.html","webpack:///./src/app/dreams/dream-detail/dream-detail.component.ts","webpack:///./src/app/dreams/dream-edit/dream-edit.component.css","webpack:///./src/app/dreams/dream-edit/dream-edit.component.html","webpack:///./src/app/dreams/dream-edit/dream-edit.component.ts","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.css","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.html","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.ts","webpack:///./src/app/dreams/dream-list/dream-list.component.css","webpack:///./src/app/dreams/dream-list/dream-list.component.html","webpack:///./src/app/dreams/dream-list/dream-list.component.ts","webpack:///./src/app/dreams/dream-resolver.service.ts","webpack:///./src/app/dreams/dream.model.ts","webpack:///./src/app/dreams/dream.service.ts","webpack:///./src/app/dreams/dreams-resolver.service.ts","webpack:///./src/app/dreams/dreams.component.css","webpack:///./src/app/dreams/dreams.component.html","webpack:///./src/app/dreams/dreams.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/shared/dropdown.directive.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { BoardListComponent } from \"./board/board-list/board-list.component\";\nimport { DreamsComponent } from \"./dreams/dreams.component\";\n\nimport { HomeComponent } from \"./home/home.component\";\nimport { DreamsResolver} from \"./dreams/dreams-resolver.service\";\nimport { DreamResolver } from \"./dreams/dream-resolver.service\";\nimport {DreamEditComponent} from \"./dreams/dream-edit/dream-edit.component\";\n\nconst appRoutes: Routes = [\n  // {path: '', redirectTo: 'boards', pathMatch: 'full'},\n  { path: '', component: HomeComponent },\n  { path: 'boards', component: BoardListComponent },\n  { path: 'boards/:boardId/dreams',\n    component: DreamsComponent,\n    // resolve: { dreams: DreamsResolver }\n    },\n  { path: 'boards/:boardId/dreams/new',\n    component: DreamsComponent },\n  { path: 'boards/:boardId/dreams/:dreamId',\n    component: DreamsComponent,\n    resolve: {\n        // dreams: DreamsResolver,\n        dream: DreamResolver }\n        },\n\n  { path: 'boards/:boardId/dreams/:dreamId/edit',\n    component: DreamsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <!--<app-board-list-->\\n        <!--*ngIf=\\\"displayBoard\\\" >-->\\n      <!--</app-board-list>-->\\n      <!--<app-dreams-->\\n        <!--*ngIf=\\\"displayDream\\\" >-->\\n      <!--</app-dreams>-->\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\nexport class AppComponent {\n  // displayBoard: boolean = false;\n  // displayDream: boolean = false;\n\n  constructor() {\n\n  }\n\n  // onNavigate(menu: string) {\n  //   console.log(\"[\" + menu + \"] Menu clicked!\");\n  //   if (menu === 'board') {\n  //     this.displayBoard = true;\n  //     this.displayDream = false;\n  //   }else{\n  //     this.displayDream = true;\n  //     this.displayBoard = false;\n  //   }\n  // }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { HeaderComponent } from './header/header.component';\nimport { BoardListComponent } from './board/board-list/board-list.component';\nimport { BoardEditComponent } from \"./board/board-list/board-edit/board-edit.component\";\nimport { DreamListComponent } from './dreams/dream-list/dream-list.component';\nimport { DreamItemComponent } from './dreams/dream-list/dream-item/dream-item.component';\nimport { DreamDetailComponent } from './dreams/dream-detail/dream-detail.component';\nimport { DreamsComponent } from './dreams/dreams.component';\nimport { DropdownDirective } from \"./shared/dropdown.directive\";\nimport { BoardService } from \"./board/board.service\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DreamService } from \"./dreams/dream.service\";\nimport { DreamsResolver } from \"./dreams/dreams-resolver.service\";\nimport { DreamResolver } from \"./dreams/dream-resolver.service\";\nimport { HttpModule } from \"@angular/http\";\nimport { DreamEditComponent } from \"./dreams/dream-edit/dream-edit.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BoardListComponent,\n    BoardEditComponent,\n    DreamListComponent,\n    DreamItemComponent,\n    DreamDetailComponent,\n    DreamEditComponent,\n    DreamsComponent,\n    DropdownDirective,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpModule\n  ],\n  providers: [BoardService, DreamService, DreamsResolver, DreamResolver],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            #nameInput\\n            >\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"category\\\">Category</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"category\\\"\\n            class=\\\"form-control\\\"\\n            #categoryInput\\n            >\\n        </div>\\n        <div class=\\\"col-sm-7 form-group\\\">\\n          <label for=\\\"description\\\">Description</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"description\\\"\\n            class=\\\"form-control\\\"\\n            #descriptionInput\\n            >\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"btn-toolbar\\\">\\n            <button\\n              class=\\\"btn btn-success\\\"\\n              type=\\\"submit\\\"\\n              (click)=\\\"onAddBoard()\\\"\\n              >\\n              Add\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\">Delete</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\">Clear</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, ElementRef, EventEmitter, Output, ViewChild} from \"@angular/core\";\nimport {Board} from \"../board.model\";\nimport {BoardService} from \"../../board.service\";\n\n@Component({\n  selector: 'app-board-edit',\n  templateUrl: './board-edit.component.html',\n  styleUrls: []\n})\n\nexport class BoardEditComponent{\n  @ViewChild('nameInput') nameInputRef: ElementRef;\n  @ViewChild('categoryInput') categoryInputRef: ElementRef;\n  @ViewChild('descriptionInput') descriptionInputRef: ElementRef;\n\n\n  constructor(private boardService: BoardService) {\n\n  }\n\n  onAddBoard() {\n    // console.log('onAddBoard() called!');\n    // this.board = new Board(\n    //   this.nameInputRef.nativeElement.value,\n    //   this.categoryInputRef.nativeElement.value,\n    //   this.descriptionInputRef.nativeElement.value\n    //   )\n    const brdId = this.boardService.getNextBoardId();\n    const brdName = this.nameInputRef.nativeElement.value;\n    const brdCategory = this.categoryInputRef.nativeElement.value;\n    const brdDesc = this.descriptionInputRef.nativeElement.value;\n    const newBoard = new Board(brdId, brdName, brdCategory, brdDesc);\n\n    this.boardService.addBoard(newBoard);\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-10\\\">\\n    <app-board-edit></app-board-edit>\\n    <hr>\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">Id</th>\\n          <th scope=\\\"col\\\">Board Name</th>\\n          <th scope=\\\"col\\\">Category</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Delete</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr style=\\\"cursor: pointer\\\"\\n            *ngFor=\\\"let board of boards\\\"\\n            [routerLink]=\\\"['/boards', board.boardId, 'dreams']\\\"\\n            >\\n          <td scope=\\\"row\\\">{{ board.boardId }}</td>\\n          <td scope=\\\"row\\\">{{ board.name }}</td>\\n          <td scope=\\\"row\\\">{{ board.category }}</td>\\n          <td scope=\\\"row\\\">{{ board.description }}</td>\\n          <td scope=\\\"row>\\\"><button class=\\\"btn-xs btn-danger\\\" (click)=\\\"onBoardDelete(board.boardId)\\\">Delete</button></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Board } from './board.model';\nimport { Router } from \"@angular/router\";\n\nimport { BoardService } from \"../board.service\";\n\n@Component({\n  selector: 'app-board-list',\n  templateUrl: './board-list.component.html',\n  styleUrls: ['./board-list.component.css']\n})\nexport class BoardListComponent implements OnInit {\n\n  boards: Board[] = [];\n\n  constructor(private boardService: BoardService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.boards = this.boardService.getBoards();\n\n    this.boardService.boardChanged.subscribe(\n      (boards: Board[]) => {\n        this.boards = boards;\n      }\n    );\n  }\n\n  onBoardDelete(boardId: number) {\n    console.log(\"onBoardDelete() : \" + boardId );\n  }\n\n}\n","export class Board {\n  public boardId: number;\n  public name: string;\n  public category: string;\n  public description: string;\n\n  constructor(id: number, name: string, category: string, description: string){\n    this.boardId = id;\n    this.name = name;\n    this.category = category;\n    this.description = description;\n  }\n}\n","import { EventEmitter, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { Board } from \"./board-list/board.model\";\n\n@Injectable()\nexport class BoardService {\n  boardChanged = new EventEmitter<Board[]>()\n\n  private boards: Board[] = [\n    new Board(1,\"Hoon's Refresh board\", 'Life', 'Dreams for enjoying my life'),\n    new Board(2, \"Hoon's Career board\", 'IT', 'Dreams for being better Programmer')\n  ];\n\n  constructor(private router: Router) {}\n\n  getBoards() {\n    return this.boards.slice();\n  }\n\n  // get Max boardId + 1\n  getNextBoardId = () => {\n    const boards = this.boards.slice();\n\n    return boards\n      .reduce((max, b) => b.boardId > max ? b.boardId : max, boards[0].boardId) + 1;\n  }\n\n  addBoard(board: Board) {\n    this.boards.push(board);\n    this.boardChanged.emit(this.boards.slice());\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img\\n      [src]=\\\"dream.imagePath\\\"\\n      alt=\\\"{{ dream.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 200px\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ dream.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div\\n      appDropdown\\n      class=\\\"btn-group\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary dropdown-toggle\\\">\\n        Manage Dream <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li>\\n          <a\\n            style=\\\"cursor: pointer\\\"\\n            (click) =\\\"onEditDream()\\\"\\n          >\\n            Edit Dream\\n          </a>\\n        </li>\\n        <li><a style=\\\"cursor: pointer\\\">Delete Dream</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{ dream.description }}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    Planed date: 2020-10-10\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    Estimated cost: € 10000\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { Dream } from \"../dream.model\";\n\n@Component({\n  selector: 'app-dream-detail',\n  templateUrl: './dream-detail.component.html',\n  styleUrls: ['./dream-detail.component.css']\n})\nexport class DreamDetailComponent implements OnInit {\n  @Input() dream: Dream;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n  // [routerLink] = \"['/boards', dream.boardId, 'dreams', dream.dreamId, 'edit']\"\n  onEditDream() {\n    this.router.navigate([\n      '/boards', this.dream.boardId, 'dreams', this.dream.dreamId, 'edit'\n    ])\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  dream-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from \"@angular/router\";\n\n@Component({\n  selector: 'app-dream-edit',\n  templateUrl: './dream-edit.component.html',\n  styleUrls: ['./dream-edit.component.css']\n})\nexport class DreamEditComponent implements OnInit {\n  dreamId: number;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\"","module.exports = \"<a\\n  style=\\\"cursor: pointer\\\"\\n  class=\\\"list-group-item clearfix\\\"\\n  routerLinkActive=\\\"active\\\"\\n  [routerLink]=\\\"['/boards', dreamInfo.boardId, 'dreams', dreamInfo.dreamId ]\\\"\\n>\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ dreamInfo.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{ dreamInfo.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img\\n      [src]=\\\"dreamInfo.imagePath\\\"\\n      alt=\\\"{{ dreamInfo.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 50px;\\\">\\n  </span>\\n</a>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dream-item',\n  templateUrl: './dream-item.component.html',\n  styleUrls: ['./dream-item.component.css']\n})\nexport class DreamItemComponent implements OnInit {\n  @Input() dreamInfo;\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button\\n      class=\\\"btn btn-success\\\"\\n      (click)=\\\"onNewDream()\\\"\\n    >\\n      New Dream\\n    </button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-dream-item\\n      *ngFor=\\\"let dream of dreams\\\"\\n      [dreamInfo]=\\\"dream\\\"\\n    >\\n    </app-dream-item>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Params, Router } from \"@angular/router\";\n\nimport { Dream } from \"../dream.model\";\nimport { DreamService } from \"../dream.service\";\n\n@Component({\n  selector: 'app-dream-list',\n  templateUrl: './dream-list.component.html',\n  styleUrls: ['./dream-list.component.css']\n})\nexport class DreamListComponent implements OnInit {\n  dreams: Dream[];\n  boardId: number;\n\n  constructor(private dreamService: DreamService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    // this.route.data\n    //   .subscribe(\n    //     (data: Data) => {\n    //       this.dreams = data['dreams'];\n    //     }\n    //   );\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          this.boardId = params['boardId'];\n          this.dreams = this.dreamService.getDreams(+this.boardId);\n          // console.log('this.dreams: ' + this.dreams);\n        }\n      );\n  }\n\n  // <!--[routerLink] = \"['/boards', dreams[0].boardId, 'dreams', 'new']\"-->\n  onNewDream() {\n    this.router.navigate(['/boards', this.boardId, 'dreams', 'new']);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\n\nimport { Observable } from \"rxjs\";\nimport { DreamService } from \"./dream.service\";\n\ninterface Dream {\n  dreamId: number;\n  boardId: number;\n  name: string;\n  description: string;\n  imagePath: string;\n}\n\n@Injectable()\nexport class DreamResolver implements Resolve<Dream> {\n  constructor(private dreamService: DreamService) {}\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<Dream> | Promise<Dream> | Dream {\n    return this.dreamService.getDream( +route.params['boardId'], +route.params['dreamId']);\n  }\n}\n","export class Dream {\n  public dreamId: number;\n  public boardId: number;\n  public name: string;\n  public description: string;\n  public imagePath: string;\n\n  constructor(dreamId:number, boardId:number, name: string, desc: string, imagePath: string){\n    this.dreamId = dreamId;\n    this.boardId = boardId;\n    this.name = name;\n    this.description = desc;\n    this.imagePath = imagePath;\n  }\n}\n","import { Dream } from \"./dream.model\";\nimport { EventEmitter } from \"@angular/core\";\n\nexport class DreamService {\n  dreamSelected = new EventEmitter<Dream>();\n  selectedDreams: Dream[];\n  selectedDream: Dream;\n\n  private dreams: Dream[] = [\n    //Dummy data\n    new Dream(1,1,'Family Europe Travel', 'We will go more than 5 countries..', 'https://www.eturbonews.com/wp-content/uploads/2017/05/EUROPEtravel-696x492.jpg'),\n    new Dream(1,2,'Register Mobile App (iOS or Android)', 'Should learn Swift or Android..', 'https://dbcms.s3.amazonaws.com/devbridgecom/bcms/image/22d10840edda459883362150cf097441/team-app.jpg'),\n    new Dream(2,1,'Hobby for MTB', 'First I need to buy mountain bike..', 'https://static.f-mts.com/u0421/pics/great-mountain-bike-trails-in-val-venosta-413-1200x485-c-x50-y50.jpg')\n  ];\n\n  // getDreams() {\n  //   // Made a copy for using it from outside\n  //   return this.dreams.slice();\n  // }\n\n  getDreams(boardId: number) {\n    this.selectedDreams = this.dreams.slice().filter(\n      (d) => {\n        return d.boardId === boardId\n      }\n    );\n\n    return this.selectedDreams;\n  }\n\n  getDream(boardId: number, dreamId: number) {\n    this.selectedDream = this.selectedDreams.slice().filter(\n      (d) => {\n        return d.boardId === boardId && d.dreamId === dreamId;\n      }\n    )[0];\n\n    return this.selectedDream;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\n\nimport { Observable } from \"rxjs\";\nimport { DreamService } from \"./dream.service\";\n\ninterface Dream {\n  dreamId: number;\n  boardId: number;\n  name: string;\n  description: string;\n  imagePath: string;\n}\n\n@Injectable()\nexport class DreamsResolver implements Resolve<Dream[]>{\n  constructor(private dreamService: DreamService) {}\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable <Dream[]> | Promise <Dream[]> | Dream[] {\n    return this.dreamService.getDreams(+route.params['boardId']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-dream-list></app-dream-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <app-dream-detail\\n      *ngIf=\\\"selectedDream; else infoText\\\"\\n      [dream]=\\\"selectedDream\\\"></app-dream-detail>\\n    <ng-template #infoText>\\n      <div style=\\\"padding-top: 55px\\\">\\n        <h3>Please select a Dream!</h3>\\n      </div>\\n    </ng-template>\\n    <app-dream-edit *ngIf=\\\"editPossible\\\"></app-dream-edit>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Dream } from \"./dream.model\";\nimport { DreamService } from \"./dream.service\";\nimport {ActivatedRoute, Data, Params} from \"@angular/router\";\n\n@Component({\n  selector: 'app-dreams',\n  templateUrl: './dreams.component.html',\n  styleUrls: ['./dreams.component.css']\n})\nexport class DreamsComponent implements OnInit {\n  selectedDream: Dream;\n  editMode: boolean = false;\n\n  constructor(private dreamService: DreamService,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data\n      .subscribe(\n        (data: Data) => {\n          this.selectedDream = data['dream'];\n        }\n      );\n\n    this.route.params\n      .subscribe(\n        (params: Params) => {\n          console.log(params);\n          this.editMode = params['dreamId'] != null;\n          console.log(this.editMode);\n        }\n      );\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">My Dream Boards</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\n          #homeMenu\\n        >\\n          <a routerLink=\\\"/\\\">Home</a>\\n        </li>\\n        <li\\n          routerLinkActive=\\\"active\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\n          #boardMenu\\n        >\\n          <a routerLink=\\\"/boards\\\">Boards</a>\\n        </li>\\n        <li *ngIf= \\\"dreamActive\\\" class=\\\"active\\\">\\n          <a>Dreams</a>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li\\n          class=\\\"dropdown\\\"\\n          appDropdown>\\n          <a style=\\\"cursor: pointer\\\" class=\\\"dropdown-toggle\\\" role=\\\"button\\\">Manage <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a style=\\\"cursor: pointer\\\">Save Data</a></li>\\n            <li><a style=\\\"cursor: pointer\\\">Fetch Data</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\"","import {Component, DoCheck, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, DoCheck {\n  @ViewChild('homeMenu') homeMenu: ElementRef;\n  @ViewChild('boardMenu') boardMenu: ElementRef;\n  dreamActive: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  ngDoCheck() {\n    if( this.homeMenu.nativeElement.className !== 'active' &&\n      this.boardMenu.nativeElement.className !== 'active'){\n      this.dreamActive = true;\n    } else {\n      this.dreamActive = false;\n    }\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Welcome to Dream board Home</h1>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Directive, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2} from '@angular/core'\n\n@Directive({\n  selector: '[appDropdown]'\n})\n\n\nexport class DropdownDirective implements OnInit{\n  //@Input() openState: boolean = false;\n  //@Input() _elementClass: String[] = [];\n\n  @HostBinding('class.open') isOpen = false;\n  // get elementClass(): string {\n  //   return this._elementClass.join(' ');\n  // }\n\n  // constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n  //\n  // }\n\n  constructor(){}\n\n  ngOnInit() {\n\n  }\n\n  @HostListener('click') toggleOpen(){\n    this.isOpen = !this.isOpen;\n\n    // [Difficult way]\n    // if ( !this.openState ){\n    //   this._elementClass.push('open');\n    //   this.elementRef.nativeElement.class = this._elementClass;\n    //   this.openState = true;\n    // }else{\n    //   this._elementClass.pop();\n    //   this.elementRef.nativeElement.class = this._elementClass;\n    //   this.openState = false;\n    // }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}