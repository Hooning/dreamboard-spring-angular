{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board-list/board-edit/board-edit.component.html","webpack:///./src/app/board/board-list/board-edit/board-edit.component.ts","webpack:///./src/app/board/board-list/board-list.component.css","webpack:///./src/app/board/board-list/board-list.component.html","webpack:///./src/app/board/board-list/board-list.component.ts","webpack:///./src/app/dreams/dream-detail/dream-detail.component.css","webpack:///./src/app/dreams/dream-detail/dream-detail.component.html","webpack:///./src/app/dreams/dream-detail/dream-detail.component.ts","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.css","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.html","webpack:///./src/app/dreams/dream-list/dream-item/dream-item.component.ts","webpack:///./src/app/dreams/dream-list/dream-list.component.css","webpack:///./src/app/dreams/dream-list/dream-list.component.html","webpack:///./src/app/dreams/dream-list/dream-list.component.ts","webpack:///./src/app/dreams/dream.model.ts","webpack:///./src/app/dreams/dreams.component.css","webpack:///./src/app/dreams/dreams.component.html","webpack:///./src/app/dreams/dreams.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/shared/board.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header (featureSelected)=\\\"onNavigate($event)\\\"></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-board-list\\n        *ngIf=\\\"displayBoardList\\\" >\\n      </app-board-list>\\n      <app-dreams\\n        *ngIf=\\\"displayDream\\\" >\\n      </app-dreams>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\nexport class AppComponent {\n  displayBoardList: boolean = false;\n  displayDream: boolean = false;\n\n  constructor() {\n\n  }\n\n  onNavigate(menu: string) {\n    console.log(\"[\" + menu + \"] Menu clicked!\");\n    if (menu === 'boardList') {\n      this.displayBoardList = true;\n      this.displayDream = false;\n    }else{\n      this.displayDream = true;\n      this.displayBoardList = false;\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { HeaderComponent } from './header/header.component';\nimport { BoardListComponent } from './board/board-list/board-list.component';\nimport { BoardEditComponent } from \"./board/board-list/board-edit/board-edit.component\";\nimport { DreamListComponent } from './dreams/dream-list/dream-list.component';\nimport { DreamItemComponent } from './dreams/dream-list/dream-item/dream-item.component';\nimport { DreamDetailComponent } from './dreams/dream-detail/dream-detail.component';\nimport { DreamsComponent } from './dreams/dreams.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BoardListComponent,\n    BoardEditComponent,\n    DreamListComponent,\n    DreamItemComponent,\n    DreamDetailComponent,\n    DreamsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3 form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            #nameInput\\n            >\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"category\\\">Category</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"category\\\"\\n            class=\\\"form-control\\\"\\n            #categoryInput\\n            >\\n        </div>\\n        <div class=\\\"col-sm-7 form-group\\\">\\n          <label for=\\\"description\\\">Description</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"description\\\"\\n            class=\\\"form-control\\\"\\n            #descriptionInput\\n            >\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <div class=\\\"btn-toolbar\\\">\\n            <button\\n              class=\\\"btn btn-success\\\"\\n              type=\\\"submit\\\"\\n              (click)=\\\"onAddBoard()\\\"\\n              >\\n              Add\\n            </button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\">Delete</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\">Clear</button>\\n          </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, ElementRef, EventEmitter, Output, ViewChild} from \"@angular/core\";\nimport {Board} from \"../../../shared/board.model\";\n\n@Component({\n  selector: 'app-board-edit',\n  templateUrl: './board-edit.component.html',\n  styleUrls: []\n})\n\nexport class BoardEditComponent{\n  @ViewChild('nameInput') nameInputRef: ElementRef;\n  @ViewChild('categoryInput') categoryInputRef: ElementRef;\n  @ViewChild('descriptionInput') descriptionInputRef: ElementRef;\n\n  @Output() boardCreated = new EventEmitter<Board>();\n\n  onAddBoard() {\n    // console.log('onAddBoard() called!');\n    // this.board = new Board(\n    //   this.nameInputRef.nativeElement.value,\n    //   this.categoryInputRef.nativeElement.value,\n    //   this.descriptionInputRef.nativeElement.value\n    //   )\n    const brdName = this.nameInputRef.nativeElement.value;\n    const brdCategory = this.categoryInputRef.nativeElement.value;\n    const brdDesc = this.descriptionInputRef.nativeElement.value;\n    const newBoard = new Board(brdName, brdCategory, brdDesc);\n\n    this.boardCreated.emit(\n      newBoard\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-10\\\">\\n    <app-board-edit (boardCreated)=\\\"onBoardCreated($event)\\\"></app-board-edit>\\n    <hr>\\n    <ul class=\\\"list-group\\\">\\n      <a\\n        class=\\\"list-group-item\\\"\\n        style=\\\"cursor: pointer\\\"\\n        *ngFor=\\\"let board of boards\\\">\\n        {{ board.name }} - {{ board.category }} - {{ board.description}}\\n      </a>\\n    </ul>\\n  </div>\\n</div>\\n\"","import {Component, ElementRef, OnInit} from '@angular/core';\nimport { Board } from '../../shared/board.model';\n\n@Component({\n  selector: 'app-board-list',\n  templateUrl: './board-list.component.html',\n  styleUrls: ['./board-list.component.css']\n})\nexport class BoardListComponent implements OnInit {\n  boards: Board[] = [\n    new Board(\"Hoon's Refresh board\", 'Life', 'Dreams for enjoying my life'),\n    new Board(\"Hoon's Career board\", 'IT', 'Dreams for being better Programmer')\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onBoardCreated(newBoardInfo: Board) {\n    //console.log(newBoardInfo);\n    this.boards.push(newBoardInfo);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <img\\n      [src]=\\\"dream.imagePath\\\"\\n      alt=\\\"{{ dream.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 250px\\\">\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1>{{ dream.name }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-primary dropdown-toggle\\\">\\n        Manage Dream <span class=\\\"caret\\\"></span>\\n      </button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a href=\\\"#\\\">To Dream Board List</a></li>\\n        <li><a href=\\\"#\\\">Edit Dream</a></li>\\n        <li><a href=\\\"#\\\">Delete Dream</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    {{ dream.description }}\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    Boards\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Dream} from \"../dream.model\";\n\n@Component({\n  selector: 'app-dream-detail',\n  templateUrl: './dream-detail.component.html',\n  styleUrls: ['./dream-detail.component.css']\n})\nexport class DreamDetailComponent implements OnInit {\n  @Input() dream: Dream;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a href=\\\"#\\\"\\n   class=\\\"list-group-item clearfix\\\"\\n   (click)=\\\"onItemClick()\\\"\\n>\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ dreamInfo.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">{{ dreamInfo.description }}</p>\\n  </div>\\n  <span class=\\\"pull-right\\\">\\n    <img\\n      [src]=\\\"dreamInfo.imagePath\\\"\\n      alt=\\\"{{ dreamInfo.name }}\\\"\\n      class=\\\"img-responsive\\\"\\n      style=\\\"max-height: 50px;\\\">\\n  </span>\\n</a>\\n\"","import {Component, EventEmitter, Input, Output, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-dream-item',\n  templateUrl: './dream-item.component.html',\n  styleUrls: ['./dream-item.component.css']\n})\nexport class DreamItemComponent implements OnInit {\n  @Input() dreamInfo;\n  @Output() showItemDetail = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onItemClick() {\n    this.showItemDetail.emit();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\">New Dream</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-dream-item\\n      *ngFor=\\\"let dream of dreams\\\"\\n      [dreamInfo]=\\\"dream\\\"\\n      (showItemDetail) = \\\"onDreamSelected(dream)\\\"\\n    ></app-dream-item>\\n  </div>\\n</div>\\n\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Dream} from \"../dream.model\";\n\n@Component({\n  selector: 'app-dream-list',\n  templateUrl: './dream-list.component.html',\n  styleUrls: ['./dream-list.component.css']\n})\nexport class DreamListComponent implements OnInit {\n  @Output() dreamWasSelected = new EventEmitter<Dream>();\n\n  dreams: Dream[] = [\n    //Dummy data\n    new Dream('Family Europe Travel', 'We will go more than 5 countries..', 'https://www.eturbonews.com/wp-content/uploads/2017/05/EUROPEtravel-696x492.jpg'),\n    new Dream('Register Mobile App (iOS or Android)', 'Should learn Swift or Android..', 'https://dbcms.s3.amazonaws.com/devbridgecom/bcms/image/22d10840edda459883362150cf097441/team-app.jpg'),\n    new Dream('Hobby for MTB', 'First I need to buy mountain bike..', 'https://static.f-mts.com/u0421/pics/great-mountain-bike-trails-in-val-venosta-413-1200x485-c-x50-y50.jpg')\n  ];\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onDreamSelected(dream: Dream) {\n    this.dreamWasSelected.emit(dream);\n  }\n\n}\n","export class Dream {\n  public name: string;\n  public description: string;\n  public imagePath: string;\n\n  constructor(name: string, desc: string, imagePath: string){\n    this.name = name;\n    this.description = desc;\n    this.imagePath = imagePath;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-dream-list (dreamWasSelected)=\\\"selectedDream = $event\\\"></app-dream-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <app-dream-detail\\n      *ngIf=\\\"selectedDream; else infoText\\\"\\n      [dream]=\\\"selectedDream\\\"></app-dream-detail>\\n    <ng-template #infoText>\\n      <p>Please select a Dream!</p>\\n    </ng-template>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Dream} from \"./dream.model\";\n\n@Component({\n  selector: 'app-dreams',\n  templateUrl: './dreams.component.html',\n  styleUrls: ['./dreams.component.css']\n})\nexport class DreamsComponent implements OnInit {\n  selectedDream: Dream;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Dream Book</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a href=\\\"#\\\" (click)=\\\"onSelect('boardList')\\\">Board List</a></li>\\n        <li><a href=\\\"#\\\" (click)=\\\"onSelect('dream')\\\">Dreams</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" role=\\\"button\\\">Manage <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">Save Data</a></li>\\n            <li><a href=\\\"#\\\">Fetch Data</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() featureSelected = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSelect(menu: string) {\n    this.featureSelected.emit(\n      menu\n    );\n  }\n\n}\n","export class Board {\n  constructor(public name: string, public category: string, public description: string){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}