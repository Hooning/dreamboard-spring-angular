{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/directive/directive.component.html","webpack:///./src/app/directive/directive.component.ts","webpack:///./src/app/server/server.component.html","webpack:///./src/app/server/server.component.ts","webpack:///./src/app/servers/servers.component.css","webpack:///./src/app/servers/servers.component.html","webpack:///./src/app/servers/servers.component.ts","webpack:///./src/app/success-alert/success-alert.component.css","webpack:///./src/app/success-alert/success-alert.component.html","webpack:///./src/app/success-alert/success-alert.component.ts","webpack:///./src/app/warning-alert/warning-alert.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h3>I'm in the AppComponent!</h3>\\n      <hr>\\n      <app-servers></app-servers>\\n      <!--<div app-servers></div>-->\\n      <!--<div class=app-servers></div>-->\\n      <!--<app-warningAlert></app-warningAlert>-->\\n      <!--<div app-success-alert></div>-->\\n      <app-directive></app-directive>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  // styleUrls: ['./app.component.css']\n  styles: [`\n    h3 {\n      color: #009926;\n    }\n  `]\n})\nexport class AppComponent {\n  title = 'Angular world!';\n  name = '';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ServerComponent } from \"./server/server.component\";\nimport { ServersComponent } from './servers/servers.component';\nimport { WarningAlertComponent } from './warning-alert/warning-alert.component';\nimport { SuccessAlertComponent } from './success-alert/success-alert.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { DirectiveComponent } from './directive/directive.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServerComponent,\n    ServersComponent,\n    WarningAlertComponent,\n    SuccessAlertComponent,\n    DirectiveComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<hr>\\n<button class=\\\"btn btn-info\\\"\\n        (click)=\\\"addParagraph()\\\">\\n  Display Details\\n</button>\\n<br>\\n<p *ngIf=\\\"paragraphShow\\\">\\n  Secret password = Hallo\\n</p>\\n\\n<div *ngFor=\\\"let logItem of clickedLogs; let i = index\\\"\\n   [ngStyle]=\\\"{backgroundColor: i >= 4 ? 'blue' : 'none'}\\\"\\n   [ngClass]=\\\"{textColor: i >= 4}\\\">\\n      {{logItem}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directive',\n  templateUrl: './directive.component.html',\n  styles: [`\n    .textColor {\n      color: white;\n    }\n  `]\n})\nexport class DirectiveComponent implements OnInit {\n  paragraphShow = false;\n  clickedLogs = [];\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n\n  addParagraph(){\n    this.paragraphShow = !this.paragraphShow;\n\n    this.clickedLogs.push('[' + new Date() + '] index: [' + (this.clickedLogs.length + 1) + '] Clicked!');\n    //this.clickedLogs.push(this.clickedLogs.length + 1);\n  }\n\n  getBgColor(){\n    return this.clickedLogs.length > 4 ? 'blue' : 'none';\n  }\n\n}\n","module.exports = \"<p [ngStyle]=\\\"{backgroundColor: getColor()}\\\"\\n   [ngClass]=\\\"{online: serverStatus === 'online'}\\\">\\n  {{ 'Server' }} with ID {{ serverId }} is {{ getServerStatus() }}\\n</p>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styles: [`\n    .online {\n      color: white;\n    }\n  `]\n})\nexport class ServerComponent {\n  serverId: number = 10;\n  serverStatus: string = 'offline';\n\n  constructor() {\n    this.serverStatus = Math.random() > 0.5 ? 'online' : 'offline';\n  }\n\n  getServerStatus(){\n    return this.serverStatus\n  }\n\n  getColor(){\n    return this.serverStatus === 'online' ? 'green' : 'red'\n  }\n}\n","module.exports = \"\"","module.exports = \"<label>Server Name</label>\\n<!--[Example] One way Binding-->\\n<!--<input-->\\n  <!--type=\\\"text\\\"-->\\n  <!--class=\\\"form-control\\\"-->\\n  <!--(input)=\\\"onUpdateServerName($event)\\\">-->\\n\\n<!--[Example] Two way Binding-->\\n<input\\n  type=\\\"text\\\"\\n  class=\\\"form-control\\\"\\n  [(ngModel)]=\\\"serverName\\\" >\\n<!--<p>{{ serverName }}</p>-->\\n<button\\n  class=\\\"btn btn-primary\\\"\\n  [disabled]=\\\"!allowNewServer\\\"\\n  (click)=\\\"onCreateServer()\\\">Add New Server</button>\\n<!--<p [innerText]=\\\"allowNewServer\\\" ></p>-->\\n<!--<p>{{allowNewServer}}</p>-->\\n<!--<p>{{ serverCreationStatus }}</p>-->\\n<p *ngIf=\\\"serverCreated; else noServer\\\">Server was created, server name is {{serverName}}</p>\\n<ng-template #noServer>\\n  <p>No server was created!</p>\\n</ng-template>\\n\\n<app-server *ngFor=\\\"let server of servers\\\"></app-server>\\n\\n<!--<label>Username</label>-->\\n<!--<input-->\\n  <!--type=\\\"text\\\"-->\\n  <!--class=\\\"form-control\\\"-->\\n  <!--[(ngModel)]=\\\"username\\\">-->\\n  <!--&lt;!&ndash;(input)=\\\"onUsernameInput()\\\">&ndash;&gt;-->\\n<!--<button-->\\n  <!--class=\\\"btn btn-primary\\\"-->\\n  <!--[disabled]=\\\"username === ''\\\"-->\\n  <!--(click)=\\\"username = ''\\\" >-->\\n  <!--&lt;!&ndash;(click) = \\\"resetUsername()\\\" >&ndash;&gt;-->\\n  <!--Reset Username</button>-->\\n<!--&lt;!&ndash;[disabled]=\\\"!allowUserReset\\\"&ndash;&gt;-->\\n<!--<p>{{ username }}</p>-->\\n\"","import { Component, OnInit } from '@angular/core';\n\n  @Component({\n    // if the inline html code exceed 3 lines you better use external (templateUrl)\n// [#1] get it from tag Name\n  selector: 'app-servers',\n// [#2] get it from attribute name\n// selector: '[app-servers]',\n// [#3] get it from class value\n// selector: '.app-servers',\n//   template: `\n//     <app-server></app-server>\n//     <app-server></app-server>\n//     <!--<div app-success-alert></div>-->\n//     <!--<app-warningAlert></app-warningAlert>-->\n//   `,\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = 'No server was created!';\n  serverName = 'Testserver';\n  username = '';\n  allowUserReset = false;\n  serverCreated = false;\n  servers = ['Testserver 1', 'Testserver 2'];\n\n  constructor() {\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 2000);\n  }\n\n  ngOnInit() {\n  }\n\n  onCreateServer(){\n    this.serverCreated = true;\n    this.servers.push(this.serverName);\n    this.serverCreationStatus = 'A new server was created! Server name is '+ this.serverName;\n  }\n\n  onUpdateServerName(event: Event){\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n\n  onUsernameInput(){\n    if( this.username == null || this.username == ''){\n      this.allowUserReset = false;\n    }else{\n      this.allowUserReset = true;\n    }\n  }\n\n  resetUsername(){\n    this.username = '';\n    this.allowUserReset = false;\n  }\n\n}\n","module.exports = \"p {\\n  padding: 10px;\\n  color: white;\\n  background-color: green;\\n  border: solid;\\n  border-color: darkgreen;\\n}\\n\"","module.exports = \"<p>\\n  It was very Successfull!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: '[app-success-alert]',\n  templateUrl: './success-alert.component.html',\n  styleUrls: ['./success-alert.component.css']\n})\nexport class SuccessAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-warningAlert',\n  // templateUrl: './warning-alert.component.html',\n  template: `\n    <p>This is the Warning, you are in danger!</p>\n  `,\n  styles: [`\n    p{\n      padding: 10px;\n      color: white;\n      background-color: red;\n      border: solid;\n      border-color: darkred;\n    }\n  `]\n\n})\n\nexport class WarningAlertComponent{\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}